apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ibm-quay-cve-check
  annotations:
    description: Connects to Quay and queries an image for CVE's
    app.openshift.io/description: Connects to Quay and queries an image for CVE's
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: image
      default: ""
    - name: CVE_SCAN_IMAGE
      default: ibmgaragecloud/ibmcloud-dev:1.2.2
  steps:
    - name: image-scan
      image: $(params.CVE_SCAN_IMAGE)
      env:
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              name: quay-api-token
              key: API_TOKEN
              optional: true
      script: |

        IMAGE="$(params.image)"
        echo "scanning $IMAGE"
        #echo "API_TOKEN $API_TOKEN"

        # Get the image id
        curl -s -H "Authorization: Bearer $API_TOKEN" https://quay.io/api/v1/repository/$IMAGE -o image.json

        IMAGE_ID=$(jq . image.json | grep image_id | cut -d"\"" -f4)

        # Get the CVE's
        curl -s -H "Authorization: Bearer $API_TOKEN" https://quay.io/api/v1/repository/$IMAGE/image/$IMAGE_ID/security?vulnerabilities=true -o cve-raw.json
        jq . cve-raw.json > cve-formatted.json

        # Count the Severities
        cat cve-formatted.json | grep Severity | sort | uniq -c | tee summary.txt
       
        RC=$(cat summary.txt | wc -l)
        echo $RC
        exit $RC